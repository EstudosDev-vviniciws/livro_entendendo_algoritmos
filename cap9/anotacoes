üß† O que √© Programa√ß√£o Din√¢mica?
Programa√ß√£o din√¢mica √© uma t√©cnica usada para resolver problemas complexos,
dividindo-os em subproblemas menores e resolvendo cada um apenas uma vez, 
armazenando os resultados (tabela).
√â especialmente √∫til em problemas de otimiza√ß√£o, como encontrar o melhor valor
poss√≠vel sob certas restri√ß√µes.


üéí Problema da Mochila (Knapsack Problem):
Voc√™ tem uma mochila com uma capacidade m√°xima de peso. Dada uma lista de itens
com pesos e valores, o objetivo √© maximizar o valor total, sem exceder a 
capacidade da mochila.


‚úèÔ∏è Solu√ß√£o Simples (For√ßa Bruta):
Consiste em testar todas as combina√ß√µes poss√≠veis de itens, mas isso √© muito
ineficiente para listas grandes (tempo exponencial).


‚úÖ Solu√ß√£o com Programa√ß√£o Din√¢mica:
Cria-se uma tabela, onde:
- Linhas representam os itens.
- Colunas representam os pesos (capacidades) da mochila.

Cada c√©lula cont√©m o valor m√°ximo que pode ser obtido com os itens dispon√≠veis
at√© aquele ponto e o peso correspondente.


üé∏ Exemplo da Linha do Viol√£o:
Dado:
- Viol√£o (peso: 1 kg, valor: 1500)
- Notebook (peso: 3 kg, valor: 2000)
- R√°dio (peso: 4 kg, valor: 3000)

Capacidade da mochila: 4 kg

A tabela mostra, por exemplo, que:
- Com o viol√£o (1kg), voc√™ pode levar 1500.
- Com notebook (3kg), pode levar 2000.
- Mas com r√°dio (4kg), leva 3000.
- Com viol√£o + notebook (1+3kg), pode levar 3500.


‚ÑπÔ∏è Perguntas Frequentes sobre o Problema da Mochila:

‚ùì O que acontece se voc√™ adicionar um item?
A tabela ganha mais uma linha. Isso pode gerar um valor total maior, pois o novo
item pode substituir combina√ß√µes antigas.


‚ùì E se modificar a ordem das linhas?
A resposta final n√£o muda, pois a programa√ß√£o din√¢mica considera todas as possibilidades
de combina√ß√£o. A ordem n√£o afeta o resultado.


‚ùì √â poss√≠vel preencher a tabela pelas colunas (em vez das linhas)?
Sim, mas o livro usa as linhas para representar os itens por clareza. Tecnicamente,
o algoritmo funciona nos dois sentidos.


‚ùì O que acontece se voc√™ adicionar um item menor?
Itens mais leves aumentam as possibilidades de combina√ß√£o. √Äs vezes, dois itens pequenos
juntos podem ter mais valor que um grande.


‚ùì Voc√™ consegue roubar fra√ß√µes de um item?
N√£o, nesse tipo de problema (chamado 0-1 knapsack problem), voc√™ n√£o pode dividir os itens.
Ou voc√™ leva o item inteiro, ou n√£o leva.
Obs: Existe uma varia√ß√£o chamada "knapsack fracion√°rio", onde fra√ß√µes s√£o permitidas ‚Äî mas
esse √© resolvido com algoritmos gulosos, n√£o programa√ß√£o din√¢mica.